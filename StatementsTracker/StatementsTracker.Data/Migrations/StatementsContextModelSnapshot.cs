// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StatementsTracker.Data;

namespace StatementsTracker.Data.Migrations
{
    [DbContext(typeof(StatementsContext))]
    partial class StatementsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("StatementsTracker.Data.Entities.PaymentMethod", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("Description")
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("PaymentMethods");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Debit Card",
                            Name = "DebitCard"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Cheque",
                            Name = "Cheque"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Direct Debit",
                            Name = "DirectDebit"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Bank Transfer",
                            Name = "BankTransfer"
                        });
                });

            modelBuilder.Entity("StatementsTracker.Data.Entities.PaymentType", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("Description")
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("PaymentType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Debit",
                            Name = "Debit"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Credit",
                            Name = "Credit"
                        });
                });

            modelBuilder.Entity("StatementsTracker.Data.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<bool>("IsPending");

                    b.Property<int>("MethodEnum")
                        .HasColumnName("MethodId");

                    b.Property<int>("StatementId");

                    b.Property<int>("TypeEnum")
                        .HasColumnName("TypeId");

                    b.HasKey("Id");

                    b.HasIndex("MethodEnum");

                    b.HasIndex("StatementId");

                    b.HasIndex("TypeEnum");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("StatementsTracker.Data.Statement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("ClosingBalance")
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("date");

                    b.Property<decimal>("OpeningBalance")
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("date");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Statements");
                });

            modelBuilder.Entity("StatementsTracker.Data.Payment", b =>
                {
                    b.HasOne("StatementsTracker.Data.Entities.PaymentMethod", "Method")
                        .WithMany()
                        .HasForeignKey("MethodEnum")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StatementsTracker.Data.Statement", "Statement")
                        .WithMany("Payments")
                        .HasForeignKey("StatementId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StatementsTracker.Data.Entities.PaymentType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeEnum")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
